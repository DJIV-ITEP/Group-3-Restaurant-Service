name: CI

on:
  push:
    branches:
      - category-test

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: restaurant
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn test --file pom.xml

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#
#      - name: Install Heroku CLI
#        run: curl https://cli-assets.heroku.com/install.sh | sh
#
#      - name: Login to Heroku
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:login
#
#      - name: Build and push Docker image
#        run: |
#          heroku container:push web -a your-app-name
#
#      - name: Release Docker image to Heroku
#        run: |
#          heroku container:release web -a your-app-name